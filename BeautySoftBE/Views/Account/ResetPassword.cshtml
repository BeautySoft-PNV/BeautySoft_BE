@model BeautySoftBE.Application.DTOs.ResetPasswordRequest
@{
    ViewData["Title"] = "BeautySoft App - Đặt lại mật khẩu";
    Layout = null;
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .container {
            max-width: 400px;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .title {
            color: #ED1E51;
            font-weight: bold;
        }
        .btn-primary {
            background-color: #ED1E51;
            border: none;
        }
        .btn-primary:hover {
            background-color: #c41641;
        }
        .input-group-text {
            cursor: pointer;
            background-color: #ED1E51;
            color: white;
        }
        .form-control:focus {
            border-color: #ED1E51;
            box-shadow: 0 0 5px rgba(237, 30, 81, 0.5);
        }
    </style>
</head>
<body>

<div class="container mt-5">
    <h2 class="text-center title">BeautySoft App</h2>
    <p class="text-center">Reset your password</p>

    <form id="resetPasswordForm" class="mt-3">
        <input type="hidden" id="token" value="@Model.Token" />
        <input type="hidden" id="email" value="@Model.Email" />

        <div class="form-group position-relative">
            <label>New Password</label>
            <div class="input-group">
                <input type="password" class="form-control" id="newPassword" required />
                <span class="input-group-text">
                    <i class="bi bi-eye-slash" id="toggleNewPassword"></i>
                </span>
            </div>
            <small class="text-danger" id="errorMessage"></small>
        </div>
        
        <div class="form-group position-relative mt-2">
            <label>Confirm Password</label>
            <div class="input-group">
                <input type="password" class="form-control" id="confirmPassword" required />
                <span class="input-group-text">
                    <i class="bi bi-eye-slash" id="toggleConfirmPassword"></i>
                </span>
            </div>
            <small class="text-danger" id="confirmErrorMessage"></small>
        </div>

        <button type="submit" class="btn btn-primary mt-3 w-100">Reset Password</button>
    </form>

    <div id="successMessage" class="alert alert-success mt-2 d-none text-center"></div>
</div>

<script>
    function togglePassword(inputId, iconId) {
        const passwordInput = document.getElementById(inputId);
        const icon = document.getElementById(iconId);

        if (passwordInput.type === "password") {
            passwordInput.type = "text";
            icon.classList.remove("bi-eye-slash");
            icon.classList.add("bi-eye");
        } else {
            passwordInput.type = "password";
            icon.classList.remove("bi-eye");
            icon.classList.add("bi-eye-slash");
        }
    }
    
    document.getElementById("toggleNewPassword").addEventListener("click", function () {
        togglePassword("newPassword", "toggleNewPassword");
    });

    document.getElementById("toggleConfirmPassword").addEventListener("click", function () {
        togglePassword("confirmPassword", "toggleConfirmPassword");
    });
    
    document.getElementById("resetPasswordForm").addEventListener("submit", async function (e) {
        e.preventDefault();

        let token = document.getElementById("token").value;
        let email = document.getElementById("email").value;
        let newPassword = document.getElementById("newPassword").value;
        let confirmPassword = document.getElementById("confirmPassword").value;
        let submitButton = this.querySelector("button");
        
        if (newPassword !== confirmPassword) {
            document.getElementById("confirmErrorMessage").innerText = "Mật khẩu không khớp!";
            return;
        } else {
            document.getElementById("confirmErrorMessage").innerText = "";
        }

        if (!token) {
            document.getElementById("errorMessage").innerText = "Token không hợp lệ!";
            return;
        }

        let formData = new FormData();
        formData.append("Token", token);
        formData.append("Email", email);
        formData.append("NewPassword", newPassword);

        submitButton.disabled = true;

        try {
            let response = await fetch("@Url.Action("ResetPassword", "Account")", {
                method: "POST",
                body: formData,
                headers: {
                    "Authorization": `Bearer ${token}`
                }
            });

            let result = await response.json();
            submitButton.disabled = false;

            if (!response.ok) {
                document.getElementById("errorMessage").innerText = result.message || "Có lỗi xảy ra!";
                document.getElementById("successMessage").classList.add("d-none");
            } else {
                document.getElementById("successMessage").innerText = result.message;
                document.getElementById("successMessage").classList.remove("d-none");
                document.getElementById("errorMessage").innerText = "";
            }
        } catch (error) {
            submitButton.disabled = false;
            document.getElementById("errorMessage").innerText = error.message || "Có lỗi xảy ra!";
        }
    });
</script>

</body>
</html>
